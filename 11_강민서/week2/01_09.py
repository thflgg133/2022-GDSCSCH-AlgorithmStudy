#로또의 최고 순위와 최저 순위
"""
로또 6/45 1부터 45까지의 숫자 중 6개를 찍어서 맞히는 대표적인 복권입니다.

로또를 구매한 민우는 당첨 번호 발표일을 학수고대하고 있었습니다. 
하지만, 민우의 동생이 로또에 낙서를 하여, 일부 번호를 알아볼 수 없게 되었습니다. 
당첨 번호 발표 후, 민우는 자신이 구매했던 로또로 당첨이 가능했던 최고 순위와 최저 순위를 알아보고 싶어 졌습니다.
알아볼 수 없는 번호를 0으로 표기하기로 하고, 민우가 구매한 로또 번호 6개가 44, 1, 0, 0, 31 25라고 가정해보겠습니다. 
당첨 번호 6개가 31, 10, 45, 1, 6, 19라면, 당첨 가능한 최고 순위와 최저 순위의 한 예는 아래와 같습니다.

- 순서와 상관없이, 구매한 로또에 당첨 번호와 일치하는 번호가 있으면 맞힌 걸로 인정됩니다.
- 알아볼 수 없는 두 개의 번호를 각각 10,6이라고 가정하면 3등에 당첨될 수 있습니다.
    - 3등을 만드는 다른 방법들도 존재합니다. 하지만 2등 이상으로 만드는 것은 불가능합니다
- 알아볼 수 없는 두 개의 번호를 각각 11, 7이라고 가정하면 5등에 당첨될 수 있습니다.
    - 5등을 만드는 다른 방법들도 존재합니다. 하지만, 6등(낙첨)으로 만드는 것은 불가능합니다.

민우가 구매한 로또 번호를 담은 배열 lottos, 당첨 번호를 담은 배열 win_nums가 매개변수로 주어집니다. 
이때, 당첨 가능한 최고 순위와 최저 순위를 차례대로 배열에 담아서 return 하도록 solution 함수를 완성해주세요.

문제 이해
- 숫자 중복x
- 최대는 겹치는 숫자 + 0의 개수
- 최저는 겹치는 숫자
- 반환값은 [최대, 최저] 임
"""
def solution(lottos, win_nums):
    a=[i for i in lottos if i in win_nums] #겹치는 숫자만 배열로 저장해로또줌
    print(a)
    return [7-max((len(a)+lottos.count(0),1)), 7-max(len(a),1)]
    """
    문제 푸는데 신경써야 할 부분이
    -> 1개맞추는 것과 아에 못맞추는 것이 동일하게 6위인 것 : 길게 if문 쓰면 편하겠지만 짧게 쓰고 싶었음
    len(a)+lottos.count(0)==0인 경우, 겹치는 숫자가 아에 없는 경우로 6위 이므로 0인경우는 1로 빼기 위해 작성함 -> 7위는 없기때문
    len(a)==0인 경우는 겹치는게 아에 없는 경우이므로 위와 같음
    max함수를 쓰지 않더라도
    return [7-(1 if len(a)+lottos.count(0)==0 else len(a)+lottos.count(0)), 7-(1 if len(a)==0 else len(a))] 라고 해도 되나 짧게 쓰고 싶어서 max를 택함

    또 다른 방법은 배열
    rank=[6,6,5,4,3,2,1]로 등수 배열을 짜고 
    return rank[len(a)+lottos.count(0)],rank[len(a)] 도 가능

    """
print(solution([0, 0, 0, 0, 0, 0],[38, 19, 20, 40, 15, 25]))
"""
내가 선택한 로또
당첨된 로또
최대 등수, 최저 등수

실패
def solution(lottos, win_nums):
    result=set(lottos)-set(win_nums)
    if(len(result)==0):
        return [1,1]
    if(len(result)==6):
        return [6,6]
    if result=={0}:
        result={}
    else:
        result.discard(0)
    return [7-(len(result)+lottos.count(0)),7-len(result) if len(result)!=0 else 6]
"""